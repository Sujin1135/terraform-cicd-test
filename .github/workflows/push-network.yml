name: terraform-apply

on:
  push:
    branches: ["main"]
    paths:
      - 'terraform/network/**'

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform-apply:
    env:
      working-directory: ./terraform/network
      branch: ${{ github.ref_name }}
    runs-on: ubuntu-latest

    steps:
      - uses: unfor19/install-aws-cli-action@master
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: install vars
        run: chmod +x ./import_vars.sh && ./import_vars.sh test_by_mango ${{ env.branch }}
        working-directory: ${{ env.working-directory }}

      - name: init
        run: terraform init
        working-directory: ${{ env.working-directory }}

      - name: plan
        run: terraform plan -lock=false -out terraform.apply -var-file=${{ env.branch }}.json
        working-directory: ${{ env.working-directory }}

      - name: apply
        id: apply
        run: terraform apply -auto-approve -lock=false -var-file=${{ env.branch }}.json
        working-directory: ${{ env.working-directory }}

      - name: generate plain output
        run: terraform show -no-color terraform.apply > terraform.text
        working-directory: ${{ env.working-directory }}

      - name: generate json output
        run: terraform show -json terraform.apply > terraform.json
        working-directory: ${{ env.working-directory }}

      - name: Read terraform.text
        id: plan_list
        uses: juliangruber/read-file-action@v1
        with:
          path: ${{ github.workspace }}/${{ env.working-directory }}/terraform.text

      - name: Echo package.json
        run: echo "${{ steps.plan_list.outputs.content }}"

      - name: Tell the action the apply outputs
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          # For posting a rich message using Block Kit
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "bar"
                  }
                }
              ],
              "attachments": [
                {
                  "color": "#FF0000",
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": ${{ steps.plan_list.outputs.content }}
                      }
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
